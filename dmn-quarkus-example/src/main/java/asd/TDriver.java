/*
This file was automatically generated by the Drools DMN open source engine Strongly Typed facility.
Do not modify this file, as any modifications will be lost when invoking the facility again.
Do not rely on the generated class(es) implementation, as the actual implementations may change.
Generated on: 2020-07-23T17:41:20.837663+02:00[Europe/Rome]

*/
package asd;

/**
 * A representation of the DMN defined ItemDefinition type 'tDriver'.<br/>
 * <br/>
 * This has been automatically generated from the following DMN asset.<br/>
 * DMN namespace: https://github.com/kiegroup/drools/kie-dmn/_A4BCA8B8-CF08-433F-93B2-A2598F19ECFF<br/>
 * DMN name: Traffic Violation<br/>
 *
 * @implNote
 * This file was automatically generated by the Drools DMN open source engine Strongly Typed facility.
 * Do not modify this file, as any modifications will be lost when invoking the facility again.
 * Do not rely on the generated class(es) implementation, as the actual implementations may change.
 * Generated on: 2020-07-23T17:41:20.837663+02:00[Europe/Rome]
 *
 * <br/>
 */
public class TDriver implements java.io.Serializable, org.kie.dmn.api.core.FEELPropertyAccessible {

    public TDriver() {
    }

    @Override()
    public org.kie.dmn.feel.util.EvalHelper.PropertyValueResult getFEELProperty(java.lang.String property) {
        switch(property) {
            case "Name":
                return org.kie.dmn.feel.util.EvalHelper.PropertyValueResult.ofValue(this.getName());
            case "Age":
                return org.kie.dmn.feel.util.EvalHelper.PropertyValueResult.ofValue(this.getAge());
            case "State":
                return org.kie.dmn.feel.util.EvalHelper.PropertyValueResult.ofValue(this.getState());
            case "City":
                return org.kie.dmn.feel.util.EvalHelper.PropertyValueResult.ofValue(this.getCity());
            case "Points":
                return org.kie.dmn.feel.util.EvalHelper.PropertyValueResult.ofValue(this.getPoints());
            default:
                return org.kie.dmn.feel.util.EvalHelper.PropertyValueResult.notDefined();
        }
    }

    @Override()
    public void setFEELProperty(java.lang.String property, java.lang.Object value) {
        switch(property) {
            case "Name":
                this.setName((java.lang.String) value);
                return;
            case "Age":
                this.setAge((java.lang.Number) value);
                return;
            case "State":
                this.setState((java.lang.String) value);
                return;
            case "City":
                this.setCity((java.lang.String) value);
                return;
            case "Points":
                this.setPoints((java.lang.Number) value);
                return;
        }
    }

    public void fromMap(java.util.Map<String, Object> values) {
        {
            Object propertyValues = values.get("Name");
            if (propertyValues != null) {
                name = (java.lang.String) propertyValues;
            }
        }
        {
            Object propertyValues = values.get("Age");
            if (propertyValues != null) {
                age = (java.lang.Number) propertyValues;
            }
        }
        {
            Object propertyValues = values.get("State");
            if (propertyValues != null) {
                state = (java.lang.String) propertyValues;
            }
        }
        {
            Object propertyValues = values.get("City");
            if (propertyValues != null) {
                city = (java.lang.String) propertyValues;
            }
        }
        {
            Object propertyValues = values.get("Points");
            if (propertyValues != null) {
                points = (java.lang.Number) propertyValues;
            }
        }
    }

    @Override()
    public java.util.Map<String, Object> allFEELProperties() {
        java.util.Map<String, Object> result = new java.util.LinkedHashMap<>();
        {
            result.put("Name", this.getName());
            result.put("Age", this.getAge());
            result.put("State", this.getState());
            result.put("City", this.getCity());
            result.put("Points", this.getPoints());
        }
        return result;
    }

    private java.lang.String name;

    public void setName(java.lang.String name) {
        this.name = name;
    }

    @org.kie.dmn.feel.lang.FEELProperty(value = "Name")
    @com.fasterxml.jackson.annotation.JsonProperty(value = "Name")
    public java.lang.String getName() {
        return name;
    }

    private java.lang.Number age;

    public void setAge(java.lang.Number age) {
        this.age = age;
    }

    @org.kie.dmn.feel.lang.FEELProperty(value = "Age")
    @com.fasterxml.jackson.annotation.JsonProperty(value = "Age")
    public java.lang.Number getAge() {
        return age;
    }

    private java.lang.String state;

    public void setState(java.lang.String state) {
        this.state = state;
    }

    @org.kie.dmn.feel.lang.FEELProperty(value = "State")
    @com.fasterxml.jackson.annotation.JsonProperty(value = "State")
    public java.lang.String getState() {
        return state;
    }

    private java.lang.String city;

    public void setCity(java.lang.String city) {
        this.city = city;
    }

    @org.kie.dmn.feel.lang.FEELProperty(value = "City")
    @com.fasterxml.jackson.annotation.JsonProperty(value = "City")
    public java.lang.String getCity() {
        return city;
    }

    private java.lang.Number points;

    public void setPoints(java.lang.Number points) {
        this.points = points;
    }

    @org.kie.dmn.feel.lang.FEELProperty(value = "Points")
    @com.fasterxml.jackson.annotation.JsonProperty(value = "Points")
    public java.lang.Number getPoints() {
        return points;
    }

    public TDriver(java.lang.String name, java.lang.Number age, java.lang.String state, java.lang.String city, java.lang.Number points) {
        super();
        this.name = name;
        this.age = age;
        this.state = state;
        this.city = city;
        this.points = points;
    }

    @Override()
    public String toString() {
        return "TDriver" + "( " + "name=" + name + ", " + "age=" + age + ", " + "state=" + state + ", " + "city=" + city + ", " + "points=" + points + " )";
    }
}
